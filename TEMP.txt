모든 제한 시간은 1분으로 한다. (변수 약 3600)


LinearQueue 계획 - First In First Out을 강조한 게임을 만들 수 있도록 아이디어를 다시 짜보자.

1. 리듬게임화
가. 판정 : 범위로 설정하며, perfact, cool, good, bad, miss로 분류.
나. 콤보 및 점수 : perfact = 1000, cool = 870, good = 500, bad = 100, miss = - 300
	콤보가 100 이상일 경우, 10으로 나눈 몫*3만큼 +해서 계산한다.
	if(combo>=100)	score+=panjung+combo/10*3;

2. 필요한 과정
가. push 혹은 pop을 누른 동안 push 또는 pop 버튼을 누를 수 없도록 한 장치 해제
나. 기어 형성 및 리듬 형성 - 알고리즘 필요
다. 마지막에 있어야할 barrel들의 수와, 각각에 적힌 숫자가 맞을 때마다 1000점 +
라. 모두 맞을 경우 10000점+


Stack 계획 - Last In First Out을 강조한 게임.

1. 등비/등차 수열을 이용
가. 항목을 선택하게 한 후, 각각 랜덤 조건을 발생시켜 미션으로 준다. (예: 초항이 10,공차가 3인 등차수열)
나. 순열을 저장한 후, 해당 조건을 만족하는 순열을 형성하였을 때, 제출(홈 버튼)을 누르도록 한다. 
다. 등비 수열의 경우, 항을 5개까지만 본다. (9개까지 하면 숫자가 매우 커짐)
2. 초항을 pop 시켰을 경우, 곧바로 GameOver 화면을 출력한 뒤, 약 4초 후 원래 화면(Start 선택지 있는 화면)으로 돌아간다.
3. 포토샵을 이용하여 Stacken 주위에 짜자잔! 이펙트를 형성, 클리어 시 생성하게 함.
4. n번째에 올바르게 와야 할 숫자보다 큰 숫자가 오거나, 올바른 숫자가 pop될 시 곧바로 GameOver 화면을 출력한 뒤, 약 4초 후 원래 화면으로 돌아간다.


CircularQueue 계획
1. 전체 수의 합이 100보다 작게 하되 합이 가장 크게 한다.
2. 처음에 Mission으로 주어지는 Tail과 Head의 위치가 알맞아야 한다.


HomeButton 개혁

1. 원래대로 돌아가지 않고, '제출'의 기능을 부가한다.
이때, 남은 시간을 고려하여 점수 보너스를 준다(Stack, CircularQueue에 한함.)
가. 보너스 방법 : {남은시간(t)/원래 시간(3600)}*1000, int형


전체적으로 Clear 시 "꽤 하시는 군요! 당신은 이제 "+DataType+" 마스터!"를 출력한다.
전체적으로 Fail 시 "Game Over \n 다음 기회에..."를 출력한다.